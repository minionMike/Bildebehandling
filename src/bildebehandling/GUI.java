/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bildebehandling;

import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.Scalar;
import org.opencv.imgcodecs.Imgcodecs;
import static org.opencv.imgcodecs.Imgcodecs.imread;
import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Christian-Heim
 */
public final class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    static {
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

    }
    //ROI
    private int lowerH;
    private int lowerS;
    private int lowerV;
    private int higherH;
    private int higherS;
    private int higherV;
    //Bildebehandlingen - knapper
    private int lowerH2 = 135;
    private int lowerS2 = 155;
    private int lowerV2 = 190;
    private int higherH2 = 190;
    private int higherS2 = 190;
    private int higherV2 = 220;
    //slider
    private Scalar lowerB;
    private Scalar higherB;
    //knapper
    private Scalar lowerB2;
    private Scalar higherB2;
    //resten
    private int change = 5;
    private int sigma = 1;
    private int size = 30;
    private Mat imgMat;
    private int currentPicture = 0;
    private List<Mat> imageCollection;
    private boolean drawContours = true;
    private boolean drawRect = true;
    private boolean drawCorners = true;
    private boolean showCroppedImage = false;
    private final ImageProcessing prosess = new ImageProcessing();
    private final matToBufferedImage matToBuffered = new matToBufferedImage();
    private final FindROI findROI = new FindROI();
    private VideoCap cap;

    public GUI() {

        initComponents();
        this.pack();
        this.setSize(1680, 1024);
        jLabel1.setAlignmentX(LEFT_ALIGNMENT);
        jLabel1.setAlignmentY(CENTER_ALIGNMENT);
        lowerH = lowerConstH.getValue();
        lowerS = lowerConstS.getValue();
        lowerV = lowerConstV.getValue();
        higherH = higherConstH.getValue();
        higherS = higherConstS.getValue();
        higherV = higherConstV.getValue();
        showHigherH.setText(String.valueOf(higherH));
        showHigherS.setText(String.valueOf(higherS));
        showHigherV.setText(String.valueOf(higherV));
        showLowerH.setText(String.valueOf(lowerH));
        showLowerS.setText(String.valueOf(lowerS));
        showLowerV.setText(String.valueOf(lowerV));
        filterSigma.setText(String.valueOf(sigma));
        filterSize.setText(String.valueOf(size));
        Hl.setText("Lower H: " + String.valueOf(lowerH2));
        Sl.setText("Lower S: " + String.valueOf(lowerS2));
        Vl.setText("Lower V: " + String.valueOf(lowerV2));
        Hu.setText("Upper H: " + String.valueOf(higherH2));
        Su.setText("Upper S: " + String.valueOf(higherS2));
        Vu.setText("Upper V: " + String.valueOf(higherV2));
        System.out.println(System.getProperty("user.dir"));
        imgMat = imread(System.getProperty("user.dir")+ "\\PictureFolder" + "/" + "pic12.jpg");
        File path = new File(System.getProperty("user.dir") + "\\PictureFolder");
        imageCollection = new ArrayList<>();
        File[] files = path.listFiles();
        for (int i = 0; i < files.length; i++) {
            if (files[i].isFile()) { //this line weeds out other directories/folders
                imageCollection.add(imread(files[i].getAbsolutePath()));
            }

        }
        paint();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        higherConstS = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        higherConstH = new javax.swing.JSlider();
        jLabel3 = new javax.swing.JLabel();
        higherConstV = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        showHigherH = new javax.swing.JLabel();
        showHigherS = new javax.swing.JLabel();
        showHigherV = new javax.swing.JLabel();
        lowerConstH = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lowerConstS = new javax.swing.JSlider();
        jLabel8 = new javax.swing.JLabel();
        lowerConstV = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        showLowerH = new javax.swing.JLabel();
        showLowerS = new javax.swing.JLabel();
        showLowerV = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        filterSize = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        filterSigma = new javax.swing.JTextField();
        showCorners = new javax.swing.JButton();
        nextPic = new javax.swing.JButton();
        showCanny = new javax.swing.JLabel();
        showHSV = new javax.swing.JLabel();
        showClosed = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        horizontalCoverage = new javax.swing.JLabel();
        verticalCoverage = new javax.swing.JLabel();
        Hl = new javax.swing.JTextField();
        Vl = new javax.swing.JTextField();
        Sl = new javax.swing.JTextField();
        Su = new javax.swing.JTextField();
        Vu = new javax.swing.JTextField();
        Hu = new javax.swing.JTextField();
        HLP = new javax.swing.JButton();
        SLP = new javax.swing.JButton();
        SLM = new javax.swing.JButton();
        HLM = new javax.swing.JButton();
        HUM = new javax.swing.JButton();
        SUP = new javax.swing.JButton();
        VLP = new javax.swing.JButton();
        HUP = new javax.swing.JButton();
        VUP = new javax.swing.JButton();
        VLM = new javax.swing.JButton();
        SUM = new javax.swing.JButton();
        VUM = new javax.swing.JButton();
        prevPic = new javax.swing.JButton();
        showContours = new javax.swing.JButton();
        showRect = new javax.swing.JButton();
        showFullPicture = new javax.swing.JButton();
        dekningsGrad = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(75, 19));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Prosessert bilde");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        higherConstS.setMaximum(255);
        higherConstS.setValue(255);
        higherConstS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                higherConstSStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel2.setText("H");

        higherConstH.setMaximum(255);
        higherConstH.setValue(255);
        higherConstH.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                higherConstHStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel3.setText("S");

        higherConstV.setMaximum(255);
        higherConstV.setToolTipText("");
        higherConstV.setValue(150);
        higherConstV.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                higherConstVStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setText("Lower HSV values");

        showHigherH.setText("showHigherH");

        showHigherS.setText("showHigherS");

        showHigherV.setText("showHigherV");

        lowerConstH.setMaximum(255);
        lowerConstH.setValue(0);
        lowerConstH.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lowerConstHStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel5.setText("V");

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("H");

        lowerConstS.setMaximum(255);
        lowerConstS.setToolTipText("");
        lowerConstS.setValue(0);
        lowerConstS.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lowerConstSStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("S");

        lowerConstV.setMaximum(255);
        lowerConstV.setToolTipText("");
        lowerConstV.setValue(0);
        lowerConstV.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lowerConstVStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("V");

        showLowerH.setText("showLowerH");

        showLowerS.setText("showLowerS");

        showLowerV.setText("showLowerV");

        jLabel6.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel6.setText("Higher HSV values");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setText("Size of mask");

        filterSize.setText("size");
        filterSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterSizeActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setText("Sigma");

        filterSigma.setText("sigma");
        filterSigma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterSigmaActionPerformed(evt);
            }
        });

        showCorners.setText("Corners");
        showCorners.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showCornersActionPerformed(evt);
            }
        });

        nextPic.setText("Next Picture");
        nextPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPicActionPerformed(evt);
            }
        });

        showCanny.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        showHSV.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        showClosed.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextField2.setText("HSV Filter");

        jTextField3.setText("Canny lines");

        jTextField4.setText("closing");

        horizontalCoverage.setText("jLabel12");
        horizontalCoverage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        verticalCoverage.setText("jLabel13");
        verticalCoverage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Hl.setText("Lower H: ");

        Vl.setText("Lower V: ");

        Sl.setText("Lower S: ");

        Su.setText("Upper S: ");

        Vu.setText("Upper V: ");

        Hu.setText("Upper H: ");

        HLP.setText("+");
        HLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HLPActionPerformed(evt);
            }
        });

        SLP.setText("+");
        SLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SLPActionPerformed(evt);
            }
        });

        SLM.setText("-");
        SLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SLMActionPerformed(evt);
            }
        });

        HLM.setText("-");
        HLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HLMActionPerformed(evt);
            }
        });

        HUM.setText("-");
        HUM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HUMActionPerformed(evt);
            }
        });

        SUP.setText("+");
        SUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUPActionPerformed(evt);
            }
        });

        VLP.setText("+");
        VLP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLPActionPerformed(evt);
            }
        });

        HUP.setText("+");
        HUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HUPActionPerformed(evt);
            }
        });

        VUP.setText("+");
        VUP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VUPActionPerformed(evt);
            }
        });

        VLM.setText("-");
        VLM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VLMActionPerformed(evt);
            }
        });

        SUM.setText("-");
        SUM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SUMActionPerformed(evt);
            }
        });

        VUM.setText("-");
        VUM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VUMActionPerformed(evt);
            }
        });

        prevPic.setText("Previous Picture");
        prevPic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prevPicActionPerformed(evt);
            }
        });

        showContours.setText("Contours");
        showContours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showContoursActionPerformed(evt);
            }
        });

        showRect.setText("Rectangle");
        showRect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRectActionPerformed(evt);
            }
        });

        showFullPicture.setText("Show cropped image");
        showFullPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFullPictureActionPerformed(evt);
            }
        });

        dekningsGrad.setText("jTextField1");
        dekningsGrad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dekningsGradActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Open Image");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Save Image");
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem3.setText("jMenuItem3");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("jMenuItem4");
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(horizontalCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(verticalCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(higherConstV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showHigherS))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(higherConstS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showHigherV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lowerConstV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showLowerV))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lowerConstS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showLowerS))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lowerConstH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showLowerH))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(higherConstH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(showHigherH))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(Vu)
                                            .addComponent(Hl, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel10)
                                            .addComponent(Vl, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Sl, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Su)
                                            .addComponent(Hu, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(prevPic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(filterSize, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(filterSigma, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(HLP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(HLM))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(SLP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(SLM))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(SUP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(SUM))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(HUP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(HUM))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(VLP)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(VLM))
                                            .addComponent(nextPic)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(showCorners, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(showRect, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(showFullPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(showContours, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(VUP)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(VUM))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(dekningsGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(showHSV, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                        .addComponent(showClosed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(27, 27, 27))
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(showCanny, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)))))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(showHigherH))
                    .addComponent(higherConstH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(higherConstV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(showHigherS))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(higherConstS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showHigherV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(9, 9, 9)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(showLowerH)
                                        .addComponent(lowerConstH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lowerConstS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(showLowerS))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lowerConstV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(showLowerV))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(filterSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(showHSV, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(filterSigma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nextPic)
                            .addComponent(prevPic))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Hl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HLP)
                            .addComponent(HLM))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SLP)
                            .addComponent(SLM)
                            .addComponent(Sl, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Vl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VLP)
                            .addComponent(VLM)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showClosed, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Hu, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HUP)
                            .addComponent(HUM))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showCanny, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SUP)
                            .addComponent(SUM)
                            .addComponent(Su))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Vu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(VUP)
                            .addComponent(VUM))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(showCorners)
                            .addComponent(showContours))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(showRect)
                            .addComponent(showFullPicture))
                        .addGap(70, 70, 70)
                        .addComponent(dekningsGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(verticalCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(horizontalCoverage, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        imgMat = imread(filename, Imgcodecs.CV_LOAD_IMAGE_COLOR);
        paint();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void higherConstHStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_higherConstHStateChanged
        higherH = higherConstH.getValue();
        showHigherH.setText(String.valueOf(higherH));
        paint();
    }//GEN-LAST:event_higherConstHStateChanged

    private void higherConstSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_higherConstSStateChanged
        higherS = higherConstS.getValue();
        showHigherS.setText(String.valueOf(higherS));
        paint();
    }//GEN-LAST:event_higherConstSStateChanged

    private void higherConstVStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_higherConstVStateChanged
        higherV = higherConstV.getValue();
        showHigherV.setText(String.valueOf(higherV));
        paint();
    }//GEN-LAST:event_higherConstVStateChanged

    private void lowerConstHStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lowerConstHStateChanged
        lowerH = lowerConstH.getValue();
        showLowerH.setText(String.valueOf(lowerH));
        paint();
    }//GEN-LAST:event_lowerConstHStateChanged

    private void lowerConstSStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lowerConstSStateChanged
        lowerS = lowerConstS.getValue();
        showLowerS.setText(String.valueOf(lowerS));
        paint();
    }//GEN-LAST:event_lowerConstSStateChanged

    private void lowerConstVStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lowerConstVStateChanged
        lowerV = lowerConstV.getValue();
        showLowerV.setText(String.valueOf(lowerV));
        paint();
    }//GEN-LAST:event_lowerConstVStateChanged

    private void filterSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterSizeActionPerformed
        size = Integer.parseInt(filterSize.getText());
        paint();
    }//GEN-LAST:event_filterSizeActionPerformed

    private void filterSigmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterSigmaActionPerformed
        sigma = Integer.parseInt(filterSigma.getText());
        paint();
    }//GEN-LAST:event_filterSigmaActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (!(cap == null)) {
            cap.release();
        }
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void nextPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPicActionPerformed
        if (currentPicture < imageCollection.size() - 1) {
            currentPicture++;
        }
        imgMat = (Mat) imageCollection.get(currentPicture);
        paint();
    }//GEN-LAST:event_nextPicActionPerformed

    private void showCornersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showCornersActionPerformed
        drawCorners = !drawCorners;
        paint();
    }//GEN-LAST:event_showCornersActionPerformed

    private void HLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HLPActionPerformed
        lowerH2 += change;
        Hl.setText("Lower H: " + lowerH2);
        paint();
    }//GEN-LAST:event_HLPActionPerformed

    private void HLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HLMActionPerformed
        lowerH2 -= change;
        Hl.setText("Lower H: " + lowerH2);
        paint();
    }//GEN-LAST:event_HLMActionPerformed

    private void SLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SLPActionPerformed
        lowerS2 += change;
        Sl.setText("Lower S: " + lowerS2);
        paint();
    }//GEN-LAST:event_SLPActionPerformed

    private void SLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SLMActionPerformed
        lowerS2 -= change;
        Sl.setText("Lower S: " + lowerS2);
        paint();
    }//GEN-LAST:event_SLMActionPerformed

    private void VLPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLPActionPerformed
        lowerV2 += change;
        Vl.setText("Lower V: " + lowerV2);
        paint();
    }//GEN-LAST:event_VLPActionPerformed

    private void VLMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VLMActionPerformed
        lowerV2 -= change;
        Vl.setText("Lower V: " + lowerV2);
        paint();
    }//GEN-LAST:event_VLMActionPerformed

    private void HUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HUPActionPerformed
        higherH2 += change;
        Hu.setText("Upper H: " + higherH2);
        paint();
    }//GEN-LAST:event_HUPActionPerformed

    private void HUMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HUMActionPerformed
        higherH2 -= change;
        Hu.setText("Upper H: " + higherH2);
        paint();
    }//GEN-LAST:event_HUMActionPerformed

    private void SUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUPActionPerformed
        higherS2 += change;
        Su.setText("Upper S: " + higherS2);
        paint();
    }//GEN-LAST:event_SUPActionPerformed

    private void SUMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SUMActionPerformed
        higherS2 -= change;
        Su.setText("Upper S: " + higherS2);
        paint();
    }//GEN-LAST:event_SUMActionPerformed

    private void VUPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VUPActionPerformed
        higherV2 += change;
        Vu.setText("Upper V: " + higherV2);
        paint();
    }//GEN-LAST:event_VUPActionPerformed

    private void VUMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VUMActionPerformed
        higherV2 -= change;
        Vu.setText("Upper V: " + higherV2);
        paint();
    }//GEN-LAST:event_VUMActionPerformed

    private void prevPicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prevPicActionPerformed
        if (currentPicture > 0) {
            currentPicture--;
        }
        imgMat = (Mat) imageCollection.get(currentPicture);
        paint();
    }//GEN-LAST:event_prevPicActionPerformed

    private void showContoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showContoursActionPerformed
        drawContours = !drawContours;
        paint();
    }//GEN-LAST:event_showContoursActionPerformed

    private void showRectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRectActionPerformed
        drawRect = !drawRect;
        paint();
    }//GEN-LAST:event_showRectActionPerformed

    private void showFullPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFullPictureActionPerformed
        showCroppedImage = !showCroppedImage;
        paint();
    }//GEN-LAST:event_showFullPictureActionPerformed

    private void dekningsGradActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dekningsGradActionPerformed

    }//GEN-LAST:event_dekningsGradActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);

            }
        });
    }

    public void paint() {
        Mat img = imgMat.clone();

        lowerB = new Scalar(lowerH, lowerS, lowerV);
        higherB = new Scalar(higherH, higherS, higherV);
        lowerB2 = new Scalar(lowerH2, lowerS2, lowerV2);
        higherB2 = new Scalar(higherH2, higherS2, higherV2);

        ImageIcon image = new ImageIcon();
        ImageIcon HSVmat = new ImageIcon();
        ImageIcon closed = new ImageIcon();
        ImageIcon canny = new ImageIcon();
        
        Mat roiFound = findROI.getROI(
                img,
                lowerB,
                higherB,
                size,
                sigma,
                drawContours,
                drawRect,
                drawCorners,
                showCroppedImage);

        if (showCroppedImage) {
            prosess.setLastImage(findROI.getCroppedImage());
            prosess.hsvThreshold(lowerB2, higherB2);
            image.setImage(
                matToBuffered.toBufferedImage(prosess.getLastImage()).getScaledInstance(
                        jLabel1.getWidth(),
                        jLabel1.getHeight(),
                        Image.SCALE_SMOOTH));
        }
        else{
        image.setImage(
                matToBuffered.toBufferedImage(roiFound).getScaledInstance(
                        jLabel1.getWidth(),
                        jLabel1.getHeight(),
                        Image.SCALE_SMOOTH));
        }
        
        prosess.HorizontalCovered();
        prosess.VerticalCovered();
        prosess.updateTotalAverageCoverage();
        
        HSVmat.setImage(
                matToBuffered.toBufferedImage(
                        findROI.getHsvMat()).getScaledInstance(
                        showHSV.getWidth(),
                        showHSV.getHeight(),
                        Image.SCALE_SMOOTH));
        closed.setImage(
                matToBuffered.toBufferedImage(
                        findROI.getClosedImage()).getScaledInstance(
                        showClosed.getWidth(),
                        showClosed.getHeight(),
                        Image.SCALE_SMOOTH));
        canny.setImage(
                matToBuffered.toBufferedImage(
                        findROI.getCannyMat()).getScaledInstance(
                        showCanny.getWidth(),
                        showCanny.getHeight(),
                        Image.SCALE_SMOOTH));
        jLabel1.setIcon(image);
        showHSV.setIcon(HSVmat);
        showClosed.setIcon(closed);
        showCanny.setIcon(canny);
        ImageIcon horizHist = new ImageIcon(
                prosess.createChart(
                        prosess.getDatasetHorizontal(),
                        "Horizontal").createBufferedImage(
                        horizontalCoverage.getWidth(),
                        horizontalCoverage.getHeight() + 50));
        ImageIcon vertiHist = new ImageIcon(
                prosess.createChart(
                        prosess.getDatasetVertical(),
                        "Vertical").createBufferedImage(
                        verticalCoverage.getWidth(),
                        verticalCoverage.getHeight() + 50));
        horizontalCoverage.setIcon(horizHist);
        verticalCoverage.setIcon(vertiHist);
        prosess.updateTotalAverageCoverage();
        DecimalFormat df = new DecimalFormat("##.##");
        dekningsGrad.setText(""+df.format(prosess.gethAvg()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HLM;
    private javax.swing.JButton HLP;
    private javax.swing.JButton HUM;
    private javax.swing.JButton HUP;
    private javax.swing.JTextField Hl;
    private javax.swing.JTextField Hu;
    private javax.swing.JButton SLM;
    private javax.swing.JButton SLP;
    private javax.swing.JButton SUM;
    private javax.swing.JButton SUP;
    private javax.swing.JTextField Sl;
    private javax.swing.JTextField Su;
    private javax.swing.JButton VLM;
    private javax.swing.JButton VLP;
    private javax.swing.JButton VUM;
    private javax.swing.JButton VUP;
    private javax.swing.JTextField Vl;
    private javax.swing.JTextField Vu;
    private javax.swing.JTextField dekningsGrad;
    private javax.swing.JTextField filterSigma;
    private javax.swing.JTextField filterSize;
    private javax.swing.JSlider higherConstH;
    private javax.swing.JSlider higherConstS;
    private javax.swing.JSlider higherConstV;
    private javax.swing.JLabel horizontalCoverage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JSlider lowerConstH;
    private javax.swing.JSlider lowerConstS;
    private javax.swing.JSlider lowerConstV;
    private javax.swing.JButton nextPic;
    private javax.swing.JButton prevPic;
    private javax.swing.JLabel showCanny;
    private javax.swing.JLabel showClosed;
    private javax.swing.JButton showContours;
    private javax.swing.JButton showCorners;
    private javax.swing.JButton showFullPicture;
    private javax.swing.JLabel showHSV;
    private javax.swing.JLabel showHigherH;
    private javax.swing.JLabel showHigherS;
    private javax.swing.JLabel showHigherV;
    private javax.swing.JLabel showLowerH;
    private javax.swing.JLabel showLowerS;
    private javax.swing.JLabel showLowerV;
    private javax.swing.JButton showRect;
    private javax.swing.JLabel verticalCoverage;
    // End of variables declaration//GEN-END:variables

}
